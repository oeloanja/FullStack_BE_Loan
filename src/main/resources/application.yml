spring:
  datasource:
    url: jdbc:mysql://localhost:3307/loan_service?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: 1234

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  application:
    name: loan-service

  kafka:
    bootstrap-servers: host.docker.internal:9092
    consumer:
      group-id: loan-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

logging:
  level:
    com:
      billit: debug
    org.hibernate.SQL: debug
    org.hibernate.type: trace

server:
  port: 8083

eureka:
  instance:
    prefer-ip-address: true
    ip-address: host.docker.internal
  client:
    service-url:
      defaultZone: http://host.docker.internal:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

feign:
  client:
    config:
      loan-group-service:
        url: ${LOAN_GROUP_SERVICE_URL:http://host.docker.internal:8084}
      invest-service:
        url: ${INVEST_SERVICE_URL:http://host.docker.internal:8081}
      repayment-service:
        url: ${REPAYMENT_SERVICE_URL:http://host.docker.internal:8082}
      loan-service:
        url: ${LOAN_SERVICE_URL:http://host.docker.internal:8083}
      user-service:
        url: ${USER_SERVICE_URL:http://host.docker.internal:8085}